<%= render 'partial/navbar' %>

<div class="col-md-6">
  <div class="">
    <%= text_field_tag :search, params[:search], placeholder: "Where are you going?", class: "form-control",id:"pac-input" %>
  </div>

</div>

<div class="col-md-6">
  <div id="map" style="height: 500px;">

  </div>
</div>

<script>
function initMap() {
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {lat:<%= @latitude %>, lng: <%= @longitude %>},
    zoom: 13
  });
  var input = /** @type {!HTMLInputElement} */(
    document.getElementById('pac-input'));

    var autocomplete = new google.maps.places.Autocomplete(input);
    autocomplete.bindTo('bounds', map);

    // マーカーとインフォウィンドウの配列を用意
    markers = [];
    infowindows = [];

    <% @arrlistings.each do |listing| %>

    //markerはこの関数の中で同じ変数
    var marker = new google.maps.Marker({
      position: new google.maps.LatLng(<%= listing.latitude %>, <%= listing.longitude %>),
      map: map
    });

    // マーカー配列にマーカを保存
    markers.push(marker);

    // マーカーがクリックされた時の処理
    marker.addListener('click', function() {

      <% if !listing.photos.blank? %>
      var content = "<div>" + '<a href="/listings/' + <%= listing.id %> +'">' + "<img src="+"<%= listing.photos[0].image.url(:thumb) %>" + " " + "style='width: 100%;height: 150px;'" +"alt='139'>" + "</a>" + '<br>' + "<h5><%= listing.listing_title %></h5>" + "<div class="+"col-md-12"+">"+"<h4>Reviews <span class="+"average_rating_listing"+"></span>"+"(<%= listing.reviews.count %>)"+"</h4></div>";
      <% end %>

      // infowindowを作成
      var infowindow = new google.maps.InfoWindow({
        content: content,
        maxWidth: 280
      });

      infowindow.open(map, this);
      infowindows.push(infowindow);

      //infowindowが完全に読み込まれた時に実行される処理
      google.maps.event.addListener(infowindow, 'domready', function() {
        $('.average_rating_listing').raty({
          path: '/assets',
          readOnly: true,
          score: <%= listing.average_star_rate %>
        });
      });
    });

    <% end %>

    autocomplete.addListener('place_changed', function() {

      // すべてのinfowindowを消す
      infowindows.forEach(function(infowindow) {
        infowindow.close();
      });
      infowindows = [];

      // すべてのmarkerを消す
      markers.forEach(function(marker) {
        marker.setVisible(false);
      });
      markers = [];

      var place = autocomplete.getPlace();
      if (!place.geometry) {
        window.alert("Autocomplete's returned place contains no geometry");
        return;
      }

      // If the place has a geometry, then present it on a map.
      if (place.geometry.viewport) {
        map.fitBounds(place.geometry.viewport);
        map.setZoom(17);
      } else {
        map.setCenter(place.geometry.location);
        map.setZoom(15);  // Why 17? Because it looks good.
      }

    });
  }

  </script>
  <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBRaMG40rwRcS483oWq4pEz2taJRRIma8U&signed_in=true&libraries=places&callback=initMap"
  async defer></script>
